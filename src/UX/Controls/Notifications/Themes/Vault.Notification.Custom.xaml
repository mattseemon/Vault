<!--
    /************************************************************************************
    * Author: https://github.com/Enterwell                                              *
    * Availability: https://github.com/Enterwell/Wpf.Notifications                      *
    * License: MIT (https://github.com/Enterwell/Wpf.Notifications/blob/master/LICENSE) *
    ************************************************************************************/
-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Seemon.Vault.Controls.Notifications"
    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">

    <SolidColorBrush x:Key="NotificationButtonDarkBackgroundOverlayBrush">#333333</SolidColorBrush>
    <SolidColorBrush x:Key="NotificationButtonDarkBackgroundOverlayPressedBrush">#666666</SolidColorBrush>
    <SolidColorBrush x:Key="NotificationButtonDarkBackgroundOverlayDisabledBrush">#FFFFFF</SolidColorBrush>

    <Style x:Key="NotificationBadgeBaseStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,-4,10,3" />
        <Setter Property="Padding" Value="5,3,5,2" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style x:Key="NotificationAdditionalContentOverBadgeStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="5,0,10,5" />
        <Setter Property="Padding" Value="5,2" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="NotificationHeaderTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NotificationMessage}}, Path=Foreground}" />
        <Setter Property="Margin" Value="0,5,10,5" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="NotificationMessageTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NotificationMessage}}, Path=Foreground}" />
        <Setter Property="Margin" Value="0,5,10,5" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="NotificationMessageButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#EAEAEA" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="16,4,16,4" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="MinHeight" Value="35" />
        <Setter Property="MinWidth" Value="70" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="backgroundBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True" />
                        <Border x:Name="backgroundOverlay"
                            BorderThickness="0" Opacity="0.3" SnapsToDevicePixels="True" />
                        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Focusable="False" RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter TargetName="backgroundBorder" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrush}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="backgroundOverlay" Property="Background" Value="{StaticResource NotificationButtonDarkBackgroundOverlayBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="backgroundOverlay" Property="Background" Value="{StaticResource NotificationButtonDarkBackgroundOverlayPressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="backgroundOverlay" Property="Background" Value="{StaticResource NotificationButtonDarkBackgroundOverlayDisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type local:NotificationMessage}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.AccentBase}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
        <Setter Property="ButtonAccentBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="BadgeAccentBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Width" Value="420" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NotificationMessage}">
                    <!--  Border for the Notification Message  -->
                    <Border x:Name="notificationMessageBorder"
                        MinHeight="90" VerticalAlignment="Top"
                        Background="{TemplateBinding Background}"
                        BorderBrush="Transparent" BorderThickness="5" SnapsToDevicePixels="True"
                        UseLayoutRounding="True">
                        <!--  Outer Grid  -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border
                                Grid.Row="0" Grid.Column="0" Width="5"
                                Background="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NotificationMessage}}, Path=ButtonAccentBrush}" />
                            <Grid x:Name="outerGrid"
                                Grid.Row="0" Grid.Column="1">
                                <Grid.Resources>
                                    <!--  Accent Button Style  -->
                                    <Style BasedOn="{StaticResource NotificationMessageButtonStyle}" TargetType="{x:Type local:NotificationMessageButton}">
                                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NotificationMessage}}, Path=ButtonAccentBrush}" />
                                    </Style>
                                    <!--  Accent Badge Style  -->
                                    <Style
                                        x:Key="NotificationBadgeAccentStyle"
                                        BasedOn="{StaticResource NotificationBadgeBaseStyle}"
                                        TargetType="{x:Type TextBlock}">
                                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:NotificationMessage}}, Path=BadgeAccentBrush}" />
                                    </Style>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <!--  Additional Content - Outer Grid  -->
                                <ContentControl x:Name="additionalContentTop" Content="{TemplateBinding AdditionalContentTop}"
                                    Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch" />
                                <ContentControl x:Name="additionalContentBottom" Content="{TemplateBinding AdditionalContentBottom}"
                                    Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="4" HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch" />
                                <ContentControl x:Name="additionalContentLeft" Content="{TemplateBinding AdditionalContentLeft}"
                                    Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch" />
                                <ContentControl x:Name="additionalContentRight" Content="{TemplateBinding AdditionalContentRight}"
                                    Grid.Row="1" Grid.RowSpan="2" Grid.Column="3" HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch" />
                                <ContentControl x:Name="additionalContentCenter" Content="{TemplateBinding AdditionalContentMain}"
                                    Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch" />

                                <!--  Inner Grid  -->
                                <Grid x:Name="innerGrid"
                                    Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch"
                                    VerticalAlignment="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <!--  Badge Grid  -->
                                    <Grid x:Name="badgeGrid"
                                        Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <!--  Additional Content - Over Badge  -->
                                        <ContentControl x:Name="additionalContentOverBadge" Content="{TemplateBinding AdditionalContentOverBadge}"
                                            Grid.Row="1"
                                            Style="{StaticResource NotificationAdditionalContentOverBadgeStyle}" />
                                        <!--  Badge  -->
                                        <TextBlock Text="{TemplateBinding BadgeText}"
                                            Grid.Row="2" Margin="10"
                                            Style="{StaticResource NotificationBadgeAccentStyle}"
                                            Visibility="{TemplateBinding BadgeVisibility}" />
                                    </Grid>
                                    <!--  Text Grid  -->
                                    <Grid x:Name="textGrid"
                                        Grid.Column="1" Margin="0,10" HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <!--  Header and Message  -->
                                        <TextBlock x:Name="headerTextBlock" Text="{TemplateBinding Header}"
                                            Grid.Row="0"
                                            Foreground="{DynamicResource MahApps.Brushes.Badged.Foreground}"
                                            Style="{StaticResource NotificationHeaderTextStyle}"
                                            Visibility="{TemplateBinding HeaderVisibility}" />
                                        <TextBlock x:Name="messageTextBlock" Text="{TemplateBinding Message}"
                                            Grid.Row="1"
                                            Foreground="{DynamicResource MahApps.Brushes.Badged.Foreground}"
                                            Style="{StaticResource NotificationMessageTextStyle}"
                                            Visibility="{TemplateBinding MessageVisibility}" />
                                    </Grid>
                                </Grid>

                                <!--  Buttons  -->
                                <ItemsControl
                                    Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4" Padding="5,0,5,5"
                                    HorizontalAlignment="Right" VerticalAlignment="Stretch"
                                    ItemsSource="{TemplateBinding Buttons}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate DataType="local:INotificationMessageButton">
                                            <Button Content="{Binding Content}" IsEnabled="{Binding IsEnabled}" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>

                                <!--  Overlay Content  -->
                                <ContentControl x:Name="overlayContainer" Content="{TemplateBinding OverlayContent}"
                                    Grid.Row="0" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4"
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:NotificationMessageContainer}">
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NotificationMessageContainer}">
                    <Grid>
                        <Border x:Name="ItemsBorder"
                            Margin="5"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true" UseLayoutRounding="True">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ItemsPresenter.Effect>
                                    <DropShadowEffect
                                        po:Freeze="True" BlurRadius="10" Direction="270" Opacity="0.3"
                                        Color="Black" />
                                </ItemsPresenter.Effect>
                            </ItemsPresenter>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>

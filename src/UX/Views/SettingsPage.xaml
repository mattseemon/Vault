<Page x:Class="Seemon.Vault.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:Seemon.Vault.Helpers.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:ip="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:Seemon.Vault.Views"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="Settings" d:DesignHeight="600" d:DesignWidth="800"
    Style="{DynamicResource MahApps.Styles.Page}"
    mc:Ignorable="d">
    <Border
        HorizontalAlignment="Center" VerticalAlignment="Center"
        BorderBrush="{DynamicResource MahApps.Brushes.Accent}"
        BorderThickness=".5">
        <TabControl
            Height="480" Margin="10" Padding="0"
            ItemContainerStyle="{StaticResource DefaultTabItem}"
            Style="{StaticResource DefaultTabControlItem}"
            TabStripPlacement="Left">
            <TabItem Header="GENERAL">
                <StackPanel Width="500" HorizontalAlignment="Left">
                    <GroupBox Padding="0" Header="Appearance">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Label Content="Choose theme:"
                                Grid.Row="0" Grid.Column="0" Margin="5,10,10,10" />
                            <ComboBox
                                Grid.Row="0" Grid.Column="1" Margin="0,10,10,10" DisplayMemberPath="Description"
                                ItemsSource="{Binding Theme.Base, Converter={converters:EnumToCollectionConverter}, Mode=OneTime}"
                                SelectedValue="{Binding Theme.Base}"
                                SelectedValuePath="Value">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" CommandParameter="Theme" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ComboBox>
                            <Label Content="Choose accent:"
                                Grid.Row="1" Grid.Column="0" Margin="5,0,10,10" />
                            <ComboBox
                                Grid.Row="1" Grid.Column="1" Margin="0,0,10,10"
                                ItemsSource="{Binding AccentColors}"
                                SelectedValue="{Binding Theme.Accent}"
                                SelectedValuePath="Name">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" CommandParameter="Theme" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Border
                                                Width="20" Height="20" Margin="0,0,5,0"
                                                Background="{Binding ColorBrush}" />
                                            <TextBlock VerticalAlignment="Center" Text="{Binding Name}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </Grid>
                    </GroupBox>
                    <GroupBox Header="System"
                        Margin="0,10,0,0" Padding="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <CheckBox Content="Start Vault with Windows"
                                Grid.Row="0" Grid.Column="0" Margin="10,10,10,10"
                                IsChecked="{Binding System.StartWithWindows}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <i:InvokeCommandAction Command="{Binding CheckedCommand}" CommandParameter="StartWithWindows" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked">
                                        <i:InvokeCommandAction Command="{Binding CheckedCommand}" CommandParameter="StartWithWindows" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                            <CheckBox Content="Always on top"
                                Grid.Row="0" Grid.Column="1" Margin="0,10,10,10"
                                IsChecked="{Binding System.AlwaysOnTop}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <i:InvokeCommandAction Command="{Binding CheckedCommand}" CommandParameter="AlwaysOnTop" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked">
                                        <i:InvokeCommandAction Command="{Binding CheckedCommand}" CommandParameter="AlwaysOnTop" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                            <CheckBox Content="Show Vault in notification area"
                                Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="10,0,10,10"
                                IsChecked="{Binding System.ShowVaultInNotificationArea}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <i:InvokeCommandAction Command="{Binding CheckedCommand}" CommandParameter="TaskbarIcon" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked">
                                        <i:InvokeCommandAction Command="{Binding CheckedCommand}" CommandParameter="TaskbarIcon" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                            <CheckBox Content="Minimize to notification area"
                                Grid.Row="2" Grid.Column="0" Margin="10,0,10,10"
                                IsChecked="{Binding System.MinimizeToNotificationArea}"
                                IsEnabled="{Binding System.ShowVaultInNotificationArea}" />
                            <CheckBox Content="Close to notification area"
                                Grid.Row="2" Grid.Column="1" Margin="0,0,10,10"
                                IsChecked="{Binding System.CloseToNotificationArea}"
                                IsEnabled="{Binding System.ShowVaultInNotificationArea}" />
                        </Grid>
                    </GroupBox>
                    <GroupBox Header="Clipboard"
                        Margin="0,10,0,0" Padding="0">
                        <StackPanel>
                            <ComboBox
                                Margin="10,10,10,10" DisplayMemberPath="Description"
                                ItemsSource="{Binding Clipboard.Copy, Converter={converters:EnumToCollectionConverter}, Mode=OneTime}"
                                SelectedValue="{Binding Clipboard.Copy}"
                                SelectedValuePath="Value" />
                            <StackPanel Margin="10,0,10,10" Orientation="Horizontal">
                                <CheckBox Content="Auto clear after" IsChecked="{Binding Clipboard.AutoClear}" />
                                <mah:NumericUpDown
                                    Width="75" Margin="5,0,0,0" HorizontalContentAlignment="Right"
                                    IsEnabled="{Binding Clipboard.AutoClear}"
                                    Maximum="300" Minimum="5" SwitchUpDownButtons="True"
                                    Value="{Binding Clipboard.AutoClearDuration}" />
                                <Label Content="seconds" />
                            </StackPanel>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Update"
                        Margin="0,10,0,0" Padding="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1.2*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <CheckBox Content="Automatically check for updates"
                                Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="10,10,10,10"
                                IsChecked="{Binding Updates.AutoUpdate}" />
                            <CheckBox Content="Include Pre-Release Builds"
                                Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Margin="0,10,10,10"
                                IsChecked="{Binding Updates.IncludePreReleases}" />
                            <DockPanel
                                Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="10,0,10,10"
                                LastChildFill="True">
                                <Label Content="Check updates :"
                                    Width="Auto" Margin="-5,0,0,0" DockPanel.Dock="Left"
                                    IsEnabled="{Binding Settings.Updates.AutoUpdate}" />
                                <ComboBox
                                    Margin="0,0,0,0" DisplayMemberPath="Description"
                                    IsEnabled="{Binding Updates.AutoUpdate}"
                                    ItemsSource="{Binding Updates.CheckUpdates, Converter={converters:EnumToCollectionConverter}, Mode=OneTime}"
                                    SelectedValue="{Binding Updates.CheckUpdates}"
                                    SelectedValuePath="Value" />
                            </DockPanel>
                        </Grid>
                    </GroupBox>
                </StackPanel>
            </TabItem>
            <TabItem Header="VAULT">
                <StackPanel Width="500" HorizontalAlignment="Left">
                    <GroupBox Header="Open PGP"
                        Grid.Column="0" Padding="0">
                        <StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Label Content="Encrypted File format:"
                                    Grid.Row="0" Grid.Column="0" Margin="5,10,10,10" />
                                <ComboBox
                                    Grid.Row="0" Grid.Column="1" Margin="0,10,10,10" DisplayMemberPath="Description"
                                    ItemsSource="{Binding PGP.EncryptFormat, Converter={converters:EnumToCollectionConverter}, Mode=OneTime}"
                                    SelectedValue="{Binding PGP.EncryptFormat}"
                                    SelectedValuePath="Value" />
                                <Label Content="Key Export File format:"
                                    Grid.Row="1" Grid.Column="0" Margin="5,0,10,10" />
                                <ComboBox
                                    Grid.Row="1" Grid.Column="1" Margin="0,0,10,10" DisplayMemberPath="Description"
                                    ItemsSource="{Binding PGP.ExportFormat, Converter={converters:EnumToCollectionConverter}, Mode=OneTime}"
                                    SelectedValue="{Binding PGP.ExportFormat}"
                                    SelectedValuePath="Value" />
                                <CheckBox Content="Cache PGP Private Key Password"
                                    Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="10,0,10,10"
                                    IsChecked="{Binding PGP.CachePassword}" />
                                <StackPanel
                                    Grid.Row="3" Grid.ColumnSpan="2" Margin="10,0,10,10"
                                    IsEnabled="{Binding PGP.CachePassword}"
                                    Orientation="Horizontal">
                                    <CheckBox Content="Auto clear after" IsChecked="{Binding PGP.AutoClear}" />
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel.IsEnabled>
                                            <MultiBinding Converter="{converters:BooleanAndConverter}">
                                                <Binding Path="PGP.CachePassword" />
                                                <Binding Path="PGP.AutoClear" />
                                            </MultiBinding>
                                        </StackPanel.IsEnabled>
                                        <mah:NumericUpDown
                                            Width="75" Margin="5,0,0,0" HorizontalContentAlignment="Right" Maximum="300"
                                            Minimum="5" SwitchUpDownButtons="True"
                                            Value="{Binding PGP.AutoClearDuration}" />
                                        <Label Content="seconds" />
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Git"
                        Margin="0,10,0,0" Padding="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <CheckBox Content="Use git"
                                Grid.Row="0" Grid.Column="0" Margin="10,10,10,10"
                                IsChecked="{Binding Git.UseGit}" />
                            <CheckBox Content="Automatically add .gpg-id files"
                                Grid.Row="0" Grid.Column="1" Margin="0,10,10,10"
                                IsChecked="{Binding Git.AutoAddGpgIdFiles}"
                                IsEnabled="{Binding Git.UseGit}" />
                            <CheckBox Content="Automatically push"
                                Grid.Row="1" Grid.Column="0" Margin="10,0,10,10"
                                IsChecked="{Binding Git.AutoPush}"
                                IsEnabled="{Binding Git.UseGit}" />
                            <CheckBox Content="Automatically pull"
                                Grid.Row="1" Grid.Column="1" Margin="0,0,10,10"
                                IsChecked="{Binding Git.AutoPull}"
                                IsEnabled="{Binding Git.UseGit}" />
                        </Grid>
                    </GroupBox>
                    <GroupBox Header="Password Generator"
                        Margin="0,10,0,0" Padding="0">
                        <StackPanel>
                            <StackPanel Margin="10,10,10,10" Orientation="Horizontal">
                                <Label Margin="-5,0,0,0" Content="Password length: " />
                                <mah:NumericUpDown
                                    Width="75" Margin="5,0,0,0" HorizontalContentAlignment="Right" Maximum="128"
                                    Minimum="6" SwitchUpDownButtons="True"
                                    Value="{Binding PasswordGenerator.Length}" />
                                <Label Content="characters" />
                            </StackPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <CheckBox Content="Include uppercase"
                                    Grid.Row="0" Grid.Column="0" Margin="10,0,10,10"
                                    IsChecked="{Binding PasswordGenerator.IncludeUppercase}" />
                                <CheckBox Content="Include lowercase"
                                    Grid.Row="0" Grid.Column="1" Margin="0,0,10,10"
                                    IsChecked="{Binding PasswordGenerator.IncludeLowercase}" />
                                <CheckBox Content="Include numerals"
                                    Grid.Row="1" Grid.Column="0" Margin="10,0,10,10"
                                    IsChecked="{Binding PasswordGenerator.IncludeNumerals}" />
                                <CheckBox Content="Include special characters"
                                    Grid.Row="2" Grid.Column="0" Margin="10,0,10,10"
                                    IsChecked="{Binding PasswordGenerator.IncludeSpecial}" />
                                <CheckBox Content="Include space"
                                    Grid.Row="2" Grid.Column="1" Margin="0,0,10,10"
                                    IsChecked="{Binding PasswordGenerator.IncludeSpace}" />
                                <Grid
                                    Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="5" Margin="0,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Label Content="Exclude characters :"
                                        Grid.Row="0" Grid.Column="0" Margin="5,0,10,10" />
                                    <TextBox Text="{Binding PasswordGenerator.ExcludeCharacters}"
                                        Grid.Row="0" Grid.Column="1" Margin="0,0,10,10" />
                                </Grid>
                            </Grid>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </TabItem>
            <TabItem Header="SECURITY">
                <StackPanel Width="500" HorizontalAlignment="Left">
                    <GroupBox Header="Key Ring Password Rotation Policy"
                        Margin="0,0,0,0" Padding="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border
                                Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="10,10,10,10"
                                Padding="5"
                                Background="{DynamicResource MahApps.Brushes.Control.Validation}">
                                <TextBlock Foreground="{DynamicResource MahApps.Brushes.Selected.Foreground}" TextWrapping="Wrap">
                                    <Run FontWeight="Bold">Note:</Run>
                                    <Run>The password rotation policy only applies to the Key Ring password, not the Open PGP key passphrases.</Run>
                                </TextBlock>
                            </Border>
                            <CheckBox Content="Enable password rotation policy for PGP key ring."
                                Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="10,0,10,10"
                                IsChecked="{Binding Security.EnablePasswordRotation}" />
                            <Label Content="Rotate key ring password every:"
                                Grid.Row="2" Grid.Column="0" Margin="5,0,10,10" VerticalAlignment="Center"
                                IsEnabled="{Binding Security.EnablePasswordRotation}" />
                            <StackPanel
                                Grid.Row="2" Grid.Column="1" Margin="0,0,10,10"
                                IsEnabled="{Binding Security.EnablePasswordRotation}"
                                Orientation="Horizontal">
                                <mah:NumericUpDown
                                    Width="80" Margin="0,0,0,0" HorizontalContentAlignment="Right" Maximum="365"
                                    Minimum="30" SwitchUpDownButtons="True"
                                    Value="{Binding Security.PasswordRotationDuration}" />
                                <Label Content="days." />
                            </StackPanel>
                            <Label Content="Do not use last:"
                                Grid.Row="3" Grid.Column="0" Margin="5,0,10,10" VerticalAlignment="Center"
                                IsEnabled="{Binding Security.EnablePasswordRotation}" />
                            <StackPanel
                                Grid.Row="3" Grid.Column="1" Margin="0,0,10,10"
                                IsEnabled="{Binding Security.EnablePasswordRotation}"
                                Orientation="Horizontal">
                                <mah:NumericUpDown
                                    Width="80" Margin="0,0,0,0" HorizontalContentAlignment="Right" Maximum="20"
                                    Minimum="5" SwitchUpDownButtons="True"
                                    Value="{Binding Security.MinimumUniquePasswordCount}" />
                                <Label Content="passwords." />
                            </StackPanel>
                        </Grid>
                    </GroupBox>
                    <GroupBox Header="Self Erase"
                        Margin="0,10,0,0" Padding="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border
                                Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="10"
                                Padding="5"
                                Background="{DynamicResource MahApps.Brushes.Control.Validation}">
                                <TextBlock Foreground="{DynamicResource MahApps.Brushes.Selected.Foreground}" TextWrapping="Wrap">
                                    <Run FontWeight="Bold">Note:</Run>
                                    <Run>Make sure you maintain a backup of your OpenPGP Secret Key. If you lose this, there will be no way to decrypt the files again.</Run>
                                </TextBlock>
                            </Border>
                            <CheckBox Content="Enable self erase"
                                Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="10,0,10,10"
                                IsChecked="{Binding Security.SelfErase}" />
                            <Label Content="Self erase after:"
                                Grid.Row="2" Grid.Column="0" Margin="5,0,10,10" VerticalAlignment="Center"
                                IsEnabled="{Binding Security.SelfErase}" />
                            <StackPanel
                                Grid.Row="2" Grid.Column="1" Margin="0,0,10,10"
                                IsEnabled="{Binding Security.SelfErase}"
                                Orientation="Horizontal">
                                <mah:NumericUpDown
                                    Width="80" Margin="0,0,0,0" HorizontalContentAlignment="Right" Maximum="50"
                                    Minimum="5" SwitchUpDownButtons="True"
                                    Value="{Binding Security.SelfEraseOnFailureCount}" />
                                <Label Content="failed attempts." />
                            </StackPanel>
                            <Label Content="Self erase mode:"
                                Grid.Row="3" Grid.Column="0" Margin="5,0,10,10" VerticalAlignment="Center"
                                IsEnabled="{Binding Security.SelfErase}" />
                            <ComboBox
                                Grid.Row="3" Grid.Column="1" Margin="0,0,10,10" DisplayMemberPath="Description"
                                IsEnabled="{Binding Security.SelfErase}"
                                ItemsSource="{Binding Security.SelfEraseMode, Converter={converters:EnumToCollectionConverter}, Mode=OneTime}"
                                SelectedValue="{Binding Security.SelfEraseMode}"
                                SelectedValuePath="Value" />
                        </Grid>
                    </GroupBox>
                </StackPanel>
            </TabItem>
            <TabItem Header="PROFILES">
                <Grid Width="500">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <ToolBar Grid.Row="0">
                        <Button Content="{ip:Material Kind=FolderPlusOutline}"
                            Height="30"
                            Command="{Binding NewProfileCommand}"
                            ToolTip="Add new profile" />
                        <Button Content="{ip:Material Kind=FolderEditOutline}"
                            Margin="5,0,0,0"
                            Command="{Binding EditProfileCommand}"
                            ToolTip="Edit selected profile" />
                        <Button Content="{ip:Material Kind=FolderRemoveOutline}"
                            Margin="5,0,0,0"
                            Command="{Binding DeleteProfilesCommand}"
                            ToolTip="Delete selected profile(s)" />
                        <Button Content="{ip:Material Kind=FolderHeartOutline}"
                            Margin="5,0,0,0"
                            Command="{Binding DefaultProfileCommand}"
                            ToolTip="Mark selected profile as default" />
                    </ToolBar>
                    <ListView
                        Grid.Row="1" Height="450" Margin="0,5,10,10"
                        ItemsSource="{Binding Profiles}"
                        SelectedItem="{Binding SelectedProfile}">
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="New Profile"
                                    Margin="2,0,0,0"
                                    Command="{Binding NewProfileCommand}"
                                    Icon="{ip:Material Kind=FolderPlusOutline}"
                                    ToolTip="Add new profile" />
                                <MenuItem Header="Edit Profile"
                                    Margin="2,0,0,0"
                                    Command="{Binding EditProfileCommand}"
                                    Icon="{ip:Material Kind=FolderEditOutline}"
                                    ToolTip="Edit selected profile" />
                                <MenuItem Header="Delete Profile(s)"
                                    Margin="2,0,0,0"
                                    Command="{Binding DeleteProfilesCommand}"
                                    Icon="{ip:Material Kind=FolderRemoveOutline}"
                                    ToolTip="Delete selected profile(s)" />
                                <MenuItem Header="Mark Default"
                                    Margin="2,0,0,0"
                                    Command="{Binding DefaultProfileCommand}"
                                    Icon="{ip:Material Kind=FolderHeartOutline}"
                                    ToolTip="Mark selected profile as default" />
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" CommandParameter="Profiles" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListView.ItemContainerStyle>
                            <Style BasedOn="{StaticResource MahApps.Styles.ListViewItem}" TargetType="ListViewItem">
                                <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Name"
                                    Width="100"
                                    DisplayMemberBinding="{Binding Name}" />
                                <GridViewColumn Header="Location"
                                    Width="250"
                                    DisplayMemberBinding="{Binding Location}" />
                                <GridViewColumn Width="75" Header="Default">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel
                                                HorizontalAlignment="Left" Orientation="Horizontal"
                                                Visibility="{Binding IsDefault, Converter={converters:BoolToVisibilityConverter}}">
                                                <ip:PackIconMaterial Kind="Heart" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </TabItem>
        </TabControl>
    </Border>
</Page>